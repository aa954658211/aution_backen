<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdou.auction.mapper.UserMapper">
<resultMap id="BaseResultMap" type="com.gdou.auction.pojo.User">
  <id column="user_id" jdbcType="INTEGER" property="userId" />
  <result column="username" jdbcType="VARCHAR" property="username" />
  <result column="password" jdbcType="VARCHAR" property="password" />
  <result column="salt" jdbcType="VARCHAR" property="salt" />
  <result column="email" jdbcType="VARCHAR" property="email" />
  <result column="phone" jdbcType="VARCHAR" property="phone" />
  <result column="sex" jdbcType="INTEGER" property="sex" />
  <result column="age" jdbcType="INTEGER" property="age" />
  <result column="status" jdbcType="INTEGER" property="status" />
  <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
</resultMap>
  <resultMap id="BaseResultMapWithRole" type="com.gdou.auction.pojo.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <association property="userRole" javaType="userRole">
      <id column="id" property="id"/>
      <result column="user_id" property="userId"/>
      <result column="role_id" property="roleId"/>
    </association>
    <association property="role" javaType="role">
      <id column="role_id" property="roleId"/>
      <result column="name" property="name"/>
      <result column="description" property="description"/>
    </association>
  </resultMap>


<sql id="Example_Where_Clause">
  <where>
    <foreach collection="oredCriteria" item="criteria" separator="or">
      <if test="criteria.valid">
        <trim prefix="(" prefixOverrides="and" suffix=")">
          <foreach collection="criteria.criteria" item="criterion">
            <choose>
              <when test="criterion.noValue">
                and ${criterion.condition}
              </when>
              <when test="criterion.singleValue">
                and ${criterion.condition} #{criterion.value}
              </when>
              <when test="criterion.betweenValue">
                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
              </when>
              <when test="criterion.listValue">
                and ${criterion.condition}
                <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                  #{listItem}
                </foreach>
              </when>
            </choose>
          </foreach>
        </trim>
      </if>
    </foreach>
  </where>
</sql>
<sql id="Update_By_Example_Where_Clause">
  <where>
    <foreach collection="example.oredCriteria" item="criteria" separator="or">
      <if test="criteria.valid">
        <trim prefix="(" prefixOverrides="and" suffix=")">
          <foreach collection="criteria.criteria" item="criterion">
            <choose>
              <when test="criterion.noValue">
                and ${criterion.condition}
              </when>
              <when test="criterion.singleValue">
                and ${criterion.condition} #{criterion.value}
              </when>
              <when test="criterion.betweenValue">
                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
              </when>
              <when test="criterion.listValue">
                and ${criterion.condition}
                <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                  #{listItem}
                </foreach>
              </when>
            </choose>
          </foreach>
        </trim>
      </if>
    </foreach>
  </where>
</sql>
<sql id="Base_Column_List">
    user_id, username, password, salt, email, phone, sex, age, status, create_time
  </sql>
<select id="selectByExample" parameterType="com.gdou.auction.pojo.UserExample" resultMap="BaseResultMap">
  select
  <if test="distinct">
    distinct
  </if>
  <include refid="Base_Column_List" />
  from user
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  <if test="orderByClause != null">
    order by ${orderByClause}
  </if>
</select>
<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from user
  where user_id = #{userId,jdbcType=INTEGER}
</select>
<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
<delete id="deleteByExample" parameterType="com.gdou.auction.pojo.UserExample">
  delete from user
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
</delete>
<insert id="insert" parameterType="com.gdou.auction.pojo.User">
    insert into user (user_id, username, password,
      salt, email, phone,
      sex, age, status, create_time
      )
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{salt,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{sex,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
<insert id="insertSelective" parameterType="com.gdou.auction.pojo.User" useGeneratedKeys="true" keyProperty="userId">
  insert into user
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="userId != null">
      user_id,
    </if>
    <if test="username != null">
      username,
    </if>
    <if test="password != null">
      password,
    </if>
    <if test="salt != null">
      salt,
    </if>
    <if test="email != null">
      email,
    </if>
    <if test="phone != null">
      phone,
    </if>
    <if test="sex != null">
      sex,
    </if>
    <if test="age != null">
      age,
    </if>
    <if test="status != null">
      status,
    </if>
    <if test="createTime != null">
      create_time,
    </if>
  </trim>
  <trim prefix="values (" suffix=")" suffixOverrides=",">
    <if test="userId != null">
      #{userId,jdbcType=INTEGER},
    </if>
    <if test="username != null">
      #{username,jdbcType=VARCHAR},
    </if>
    <if test="password != null">
      #{password,jdbcType=VARCHAR},
    </if>
    <if test="salt != null">
      #{salt,jdbcType=VARCHAR},
    </if>
    <if test="email != null">
      #{email,jdbcType=VARCHAR},
    </if>
    <if test="phone != null">
      #{phone,jdbcType=VARCHAR},
    </if>
    <if test="sex != null">
      #{sex,jdbcType=INTEGER},
    </if>
    <if test="age != null">
      #{age,jdbcType=INTEGER},
    </if>
    <if test="status != null">
      #{status,jdbcType=INTEGER},
    </if>
    <if test="createTime != null">
      #{createTime,jdbcType=TIMESTAMP},
    </if>
  </trim>
</insert>
<select id="countByExample" parameterType="com.gdou.auction.pojo.UserExample" resultType="java.lang.Long">
  select count(*) from user
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
</select>
<update id="updateByExampleSelective" parameterType="map">
  update user
  <set>
    <if test="record.userId != null">
      user_id = #{record.userId,jdbcType=INTEGER},
    </if>
    <if test="record.username != null">
      username = #{record.username,jdbcType=VARCHAR},
    </if>
    <if test="record.password != null">
      password = #{record.password,jdbcType=VARCHAR},
    </if>
    <if test="record.salt != null">
      salt = #{record.salt,jdbcType=VARCHAR},
    </if>
    <if test="record.email != null">
      email = #{record.email,jdbcType=VARCHAR},
    </if>
    <if test="record.phone != null">
      phone = #{record.phone,jdbcType=VARCHAR},
    </if>
    <if test="record.sex != null">
      sex = #{record.sex,jdbcType=INTEGER},
    </if>
    <if test="record.age != null">
      age = #{record.age,jdbcType=INTEGER},
    </if>
    <if test="record.status != null">
      status = #{record.status,jdbcType=INTEGER},
    </if>
    <if test="record.createTime != null">
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
    </if>
  </set>
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
</update>
<update id="updateByExample" parameterType="map">
  update user
  set user_id = #{record.userId,jdbcType=INTEGER},
  username = #{record.username,jdbcType=VARCHAR},
  password = #{record.password,jdbcType=VARCHAR},
  salt = #{record.salt,jdbcType=VARCHAR},
  email = #{record.email,jdbcType=VARCHAR},
  phone = #{record.phone,jdbcType=VARCHAR},
  sex = #{record.sex,jdbcType=INTEGER},
  age = #{record.age,jdbcType=INTEGER},
  status = #{record.status,jdbcType=INTEGER},
  create_time = #{record.createTime,jdbcType=TIMESTAMP}
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
</update>
<update id="updateByPrimaryKeySelective" parameterType="com.gdou.auction.pojo.User">
  update user
  <set>
    <if test="username != null">
      username = #{username,jdbcType=VARCHAR},
    </if>
    <if test="password != null">
      password = #{password,jdbcType=VARCHAR},
    </if>
    <if test="salt != null">
      salt = #{salt,jdbcType=VARCHAR},
    </if>
    <if test="email != null">
      email = #{email,jdbcType=VARCHAR},
    </if>
    <if test="phone != null">
      phone = #{phone,jdbcType=VARCHAR},
    </if>
    <if test="sex != null">
      sex = #{sex,jdbcType=INTEGER},
    </if>
    <if test="age != null">
      age = #{age,jdbcType=INTEGER},
    </if>
    <if test="status != null">
      status = #{status,jdbcType=INTEGER},
    </if>
    <if test="createTime != null">
      create_time = #{createTime,jdbcType=TIMESTAMP},
    </if>
  </set>
  where user_id = #{userId,jdbcType=INTEGER}
</update>
<update id="updateByPrimaryKey" parameterType="com.gdou.auction.pojo.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <!--userRealm用到登录-->
  <select id="selectByUsername" parameterType="string" resultMap="BaseResultMap">
    select * from user where username=#{username}
  </select>

  <!--查询带上role的users-->
  <select id="selectByExampleWithRole" parameterType="com.gdou.auction.pojo.UserExample" resultMap="BaseResultMapWithRole">
    select
    <if test="distinct">
      distinct
    </if>
    u.*,r.*
    from `user` u
    left join user_role ur on u.user_id = ur.user_id
    left join role r on r.role_id = ur.role_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <!--查询带上用户角色通过id-->
  <select id="selectByPrimaryKeyWithRole" parameterType="java.lang.Integer" resultMap="BaseResultMapWithRole">
    select
     u.*,r.*
    from `user` u
    left join user_role ur on u.user_id = ur.user_id
    left join role r on r.role_id = ur.role_id
    where u.user_id = #{userId,jdbcType=INTEGER}
  </select>

  <!--添加用户角色关联-->
  <insert id="addUserRole" parameterType="userRole">
    insert into user_role(id,user_id,role_id)
    values(default ,#{userId},#{roleId})
  </insert>
  <delete id="delUserRole" parameterType="integer">
    delete from user_role where user_id=#{param1}
  </delete>

  <select id="getRolesByUsername" parameterType="string" resultType="string">
    select r.name from role r
    left join user_role ur on r.role_id = ur.role_id
	LEFT JOIN `user` u on u.user_id = ur.user_id
	where u.username=#{param1}
  </select>
  <select id="getPermissionsByUsername" parameterType="string" resultType="string">
    select p.perms from permission p
        left join role_permission rp on p.permission_id = rp.permission_id
        LEFT JOIN role r on r.role_id = rp.role_id
        LEFT JOIN user_role ur on r.role_id = ur.role_id
        LEFT JOIN `user` u on u.user_id = ur.user_id
		where u.username=#{param1};
  </select>
</mapper>